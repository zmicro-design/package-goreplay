#!/bin/bash

install() {
  # prepare vars
  local name="gor"

  log::info "[$(timestamp)][package][$name] preparing ..."

  # get system os/arch
  local arch="$PACKAGE_OS_ARCH"
  local kernel="$PACKAGE_OS_KERNEL"
  local platform="$PACKAGE_OS_PLATFORM"
  # usr_bin_dir
  local usr_bin_dir="$PACKAGE_USER_BIN_DIR"
  local tmp_dir="$PACKAGE_TMP_DIR"

  # files
  local tmp_file="$name.tar.gz"
  local bin_file="./$name"

  local typ="x64"
  if [ "$platform" = "darwin" ]; then
    typ="mac"
  else
    if [ "$arch" = "arm64" ]; then
      log::error "[$(timestamp)] unsupported architecture $arch"
      return 1
    fi
  fi

  # prepare context
  cd $tmp_dir

  # reference: https://github.com/buger/goreplay/releases
  # example:
  #   https://github.com/buger/goreplay/releases/download/v1.3.2/gor_1.3.2_mac.tar.gz
  #   https://github.com/buger/goreplay/releases/download/v1.3.2/gor_1.3.2_x64.tar.gz
  # generate url
  local url="${PACKAGE_CORE_RELEASE_DOWNLOAD}/$PACKAGE_CORE_VERSION/${name}_${PACKAGE_CORE_VERSION#v}_${typ}.tar.gz"
  log::debug "[$(timestamp)][package][$name][$kernel][$arch] url: $url, file: ${tmp_file}, tmp_dir: $tmp_dir"

  # download
  log::info "[$(timestamp)][package][$name] downloading ..."
  os::download $tmp_file $url

  # extract
  log::info "[$(timestamp)][package][$name] extracting ..."
  os::extract $tmp_file

  # make executable
  log::info "[$(timestamp)][package][$name] making executable ..."
  chmod 755 $bin_file

  # install
  log::info "[$(timestamp)][package][$name] installing ..."
  sudo mv $bin_file $usr_bin_dir

  # clean
  log::info "[$(timestamp)][package][$name] cleaning ..."
  rm -rf $tmp_dir
}

export -f install
